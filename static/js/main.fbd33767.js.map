{"version":3,"file":"static/js/main.fbd33767.js","mappings":"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","sources":["src/components/card.tsx","src/components/predictions.tsx","src/components/loading.tsx","src/modelHandler/index.web.ts","src/modelHandler/preprocessing/index.web.ts","src/App.tsx","index.ts","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { FC } from \"react\";\r\nimport { Text, View } from \"react-native\";\r\n\r\ninterface CardInterface {\r\n  emoji: string;\r\n  label: string;\r\n  percentage: number;\r\n  selected: boolean;\r\n}\r\n\r\nconst Card: FC<CardInterface> = ({ emoji, label, percentage, selected }) => {\r\n  return (\r\n    <View\r\n      className={`flex items-center m-2 px-4 py-2 rounded-lg ${\r\n        selected ? \"bg-lime-400\" : \"bg-yellow-200\"\r\n      }`}\r\n    >\r\n      <Text className=\"text-3xl\">{emoji}</Text>\r\n      <Text className=\"text-sm font-semibold dark\">{label}</Text>\r\n      <Text className=\"text-sm\">{percentage % 1 === 0 ? percentage : percentage.toFixed(2)}%</Text>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import { FC } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport { PredInterface } from \"../modelHandler\";\r\nimport Card from \"./card\";\r\n\r\ninterface PredictionsInterface {\r\n  prediction: PredInterface | null;\r\n}\r\n\r\nconst Predictions: FC<PredictionsInterface> = ({ prediction }) => {\r\n  return (\r\n    <>\r\n      {prediction && (\r\n        <View className=\"flex justify-center items-center\">\r\n          <View className=\"flex-row justify-center flex-wrap mt-2 max-w-sm\">\r\n            <Card\r\n              emoji=\"ðŸ˜²\"\r\n              label=\"Surprise\"\r\n              percentage={prediction.probabilities[1]}\r\n              selected={prediction.predicted == 1}\r\n            />\r\n            <Card\r\n              emoji=\"ðŸ˜Š\"\r\n              label=\"Happiness\"\r\n              percentage={prediction.probabilities[2]}\r\n              selected={prediction.predicted == 2}\r\n            />\r\n            <Card\r\n              emoji=\"ðŸ˜ \"\r\n              label=\"Anger\"\r\n              percentage={prediction.probabilities[3]}\r\n              selected={prediction.predicted == 3}\r\n            />\r\n            <Card\r\n              emoji=\"ðŸ˜¨\"\r\n              label=\"Fear\"\r\n              percentage={prediction.probabilities[4]}\r\n              selected={prediction.predicted == 4}\r\n            />\r\n            <Card\r\n              emoji=\"ðŸ¤¢\"\r\n              label=\"Disgust\"\r\n              percentage={prediction.probabilities[5]}\r\n              selected={prediction.predicted == 5}\r\n            />\r\n            <Card\r\n              emoji=\"ðŸ˜¢\"\r\n              label=\"Sadness\"\r\n              percentage={prediction.probabilities[6]}\r\n              selected={prediction.predicted == 6}\r\n            />\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Predictions;\r\n","import { FC } from \"react\";\r\nimport { ActivityIndicator, Image, Platform, Text, View } from \"react-native\";\r\nimport { useColorScheme } from \"nativewind\";\r\n\r\nconst imageUri = require(\"../../assets/loading.png\");\r\n\r\nconst Loading: FC<{ progress: string | null }> = ({ progress }) => {\r\n  const { colorScheme } = useColorScheme();\r\n\r\n  return (\r\n    <>\r\n      {progress && (\r\n        <View className=\"flex-1 absolute left-0 top-0 w-full h-full items-center justify-center bg-white dark:bg-neutral-900\">\r\n          <Image source={imageUri} className=\"w-80 h-80 rounded-xl\" />\r\n          <View className=\"flex-row items-center justify-center\">\r\n            <ActivityIndicator size=\"large\" color={colorScheme === \"dark\" ? \"white\" : \"black\"} />\r\n            <Text className=\"m-8 text-lg font-semibold dark:text-white\">{progress}</Text>\r\n          </View>\r\n        </View>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import * as ort from \"onnxruntime-web\";\r\n\r\nexport interface PredInterface {\r\n  predicted: number;\r\n  probabilities: number[];\r\n}\r\n\r\nexport class modelHandler {\r\n  loadSession = async (modelName: string): Promise<void> => {\r\n    try {\r\n      // on web model is placed on static/model folder. see webpack.config.js\r\n      (window as any).session = await ort.InferenceSession.create(\r\n        `${process.env.PUBLIC_URL}/static/model/${modelName}`\r\n      );\r\n      console.log(\"Session loaded!\");\r\n    } catch (e) {\r\n      alert(\"Can't load model!\");\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  predict = async (text: string): Promise<PredInterface | undefined> => {\r\n    const session: ort.InferenceSession = (window as any).session;\r\n    if (!session) alert(\"Model is not loaded!\");\r\n\r\n    let result: PredInterface | undefined;\r\n    const input = new ort.Tensor(\"string\", [text], [1, 1]);\r\n    await session\r\n      .run({ words: input })\r\n      .then((res) => {\r\n        result = {\r\n          predicted: res.label.data[0] as number,\r\n          probabilities: Array.from(res.probabilities.data as Float32Array).map((num) => num * 100),\r\n        };\r\n      })\r\n      .catch((e) => {\r\n        alert(\"Failed to predict!.\");\r\n        throw e;\r\n      });\r\n\r\n    return result;\r\n  };\r\n}\r\n","type prepFun = (text: string) => string;\r\n\r\nexport class Preprocessing {\r\n  init = async () => {\r\n    await ((window as any).pyodide as Pyodide).runPythonAsync(`\r\n      import re\r\n      import string\r\n      import unicodedata\r\n      from Sastrawi.Stemmer.StemmerFactory import StemmerFactory\r\n      from indoNLP.preprocessing import (emoji_to_words, remove_html,\r\n          remove_url, replace_slang, replace_word_elongation\r\n      )\r\n      \r\n      factory = StemmerFactory()\r\n      STEMMER = factory.create_stemmer()\r\n    `);\r\n  };\r\n\r\n  preprocessing: prepFun = ((window as any).pyodide as Pyodide).runPython(`\r\n    def preprocessing(text):\r\n        text = text.lower()\r\n        text = re.sub(r\"\\\\s+\", \" \", text, flags=re.UNICODE)  # remove whitespace\r\n        text = emoji_to_words(text)  # remove emoji\r\n        text = unicodedata.normalize(\"NFD\", text).encode(\"ascii\", \"ignore\").decode(\"ascii\")\r\n        text = remove_html(text)  # remove html tags\r\n        text = remove_url(text)  # remove url\r\n        text = replace_word_elongation(text)\r\n        text = replace_slang(text)  # replace slang words\r\n        # text = remove_stopwords(text)\r\n        text = text.translate(str.maketrans(\"\", \"\", string.digits))  # remove numbers\r\n        text = text.translate(\r\n            str.maketrans(string.punctuation, \" \" * len(string.punctuation))\r\n        )  # remove punctuation\r\n        text = \" \".join(text.split())\r\n        text = STEMMER.stem(text)\r\n        return \" \".join(text.split())\r\n    preprocessing\r\n    `);\r\n\r\n  run = (text: string): string => this.preprocessing(text);\r\n}\r\n","import { FC, useEffect, useState, useRef } from \"react\";\r\nimport { StatusBar } from \"expo-status-bar\";\r\nimport { Alert, Platform, Pressable, Text, TextInput, View } from \"react-native\";\r\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\r\nimport { useColorScheme } from \"nativewind\";\r\nimport { Picker } from \"@react-native-picker/picker\";\r\nimport Predictions from \"./components/predictions\";\r\nimport Loading from \"./components/loading\";\r\nimport { modelHandler, PredInterface } from \"./modelHandler\";\r\nimport { Preprocessing } from \"./modelHandler/preprocessing\";\r\n\r\nconst App: FC = () => {\r\n  const [loading, setLoading] = useState<string | null>(\"Loading Model...\");\r\n  const [text, setText] = useState<string>(\"\");\r\n  const [prediction, setPrediction] = useState<PredInterface | null>(null);\r\n  const { colorScheme, setColorScheme } = useColorScheme();\r\n  const model = new modelHandler();\r\n  const [selectedModel, setSelectedModel] = useState<string>(\"model-svm-linear-small.ort\");\r\n  const preprocessing = useRef<Preprocessing | null>(null);\r\n\r\n  const predict = async () => {\r\n    if (text !== \"\") {\r\n      const cleanedText = preprocessing.current?.run(text) as string;\r\n      const pred = await model.predict(cleanedText);\r\n      if (pred) setPrediction(pred);\r\n    } else Alert.alert(\"Null text submitted!\", \"Please type a text to detect.\");\r\n  };\r\n\r\n  // handle toggle theme on web\r\n  useEffect(() => {\r\n    if (Platform.OS === \"web\")\r\n      document.getElementsByTagName(\"html\")[0].className = colorScheme === \"dark\" ? \"dark\" : \"\";\r\n  }, [colorScheme]);\r\n\r\n  useEffect(() => {\r\n    const prepare = async (): Promise<void> => {\r\n      await model.loadSession(selectedModel);\r\n\r\n      if (Platform.OS === \"web\") {\r\n        setLoading(\"Loading Pyodide...\");\r\n        const pyodide = await loadPyodide();\r\n        await pyodide.loadPackage(\"micropip\");\r\n        const micropip = pyodide.pyimport(\"micropip\");\r\n\r\n        setLoading(\"Installing pydeps on pyodide...\");\r\n        await micropip.install([\"indoNLP\", \"PySastrawi\"]);\r\n\r\n        (window as any).pyodide = pyodide;\r\n      }\r\n\r\n      preprocessing.current = new Preprocessing();\r\n      await preprocessing.current.init();\r\n      setLoading(null);\r\n    };\r\n\r\n    prepare();\r\n  }, []);\r\n\r\n  return (\r\n    <View className=\"flex-1 bg-white dark:bg-neutral-900\">\r\n      <View\r\n        className={`flex-1 items-center justify-between mx-4 mb-4 ${\r\n          Platform.OS === \"web\" ? \"mt-4\" : \"mt-9\"\r\n        }`}\r\n      >\r\n        <View className=\"flex-row items-center w-full justify-between\">\r\n          <View className=\"px-2.5 pt-1.5 pb-2 bg-black dark:bg-violet-900 rounded-lg\">\r\n            <Text className=\"text-3xl text-white font-semibold\">Showcase</Text>\r\n          </View>\r\n          <Pressable\r\n            onPress={() => {\r\n              setColorScheme(colorScheme === \"dark\" ? \"light\" : \"dark\");\r\n            }}\r\n          >\r\n            {colorScheme === \"dark\" ? (\r\n              <MaterialCommunityIcons name=\"weather-sunny\" size={35} color=\"white\" />\r\n            ) : (\r\n              <MaterialCommunityIcons name=\"weather-night\" size={35} color=\"black\" />\r\n            )}\r\n          </Pressable>\r\n        </View>\r\n        <View className=\"flex items-center w-full\">\r\n          <View className=\"flex items-center justify-center\">\r\n            <Text className=\"text-3xl font-semibold text-center dark:text-white\">\r\n              Emotion Detector [ID]\r\n            </Text>\r\n            <Text className=\"text-sm text-center mx-2 dark:text-white\">\r\n              Text emotion detector using <Text className=\"font-bold\">SVM</Text> live in{\" \"}\r\n              {Platform.OS === \"web\" ? \"browser\" : \"mobile\"} powered by\r\n              <Text className=\"text-sm font-bold italic\">\r\n                {Platform.OS === \"web\" ? \" onnxruntime-web\" : \" onnxruntime-mobile\"}\r\n              </Text>\r\n            </Text>\r\n            {Platform.OS === \"web\" && (\r\n              <Picker\r\n                style={{\r\n                  marginTop: \"6px\",\r\n                  padding: \"5px\",\r\n                  paddingTop: \"3px\",\r\n                  backgroundColor: \"black\",\r\n                  color: \"#A3E635\",\r\n                  borderRadius: 4,\r\n                  fontSize: 14,\r\n                  lineHeight: 20,\r\n                }}\r\n                selectedValue={selectedModel}\r\n                onValueChange={async (itemValue) => {\r\n                  setLoading(`Loading model ${itemValue}`);\r\n                  await model.loadSession(itemValue);\r\n                  setSelectedModel(itemValue);\r\n                  setLoading(null);\r\n                }}\r\n              >\r\n                <Picker.Item\r\n                  label=\"model-svm-linear-small.ort\"\r\n                  value=\"model-svm-linear-small.ort\"\r\n                />\r\n                <Picker.Item\r\n                  label=\"model-svm-linear-medium.ort\"\r\n                  value=\"model-svm-linear-medium.ort\"\r\n                />\r\n                <Picker.Item\r\n                  label=\"model-svm-linear-large.ort\"\r\n                  value=\"model-svm-linear-large.ort\"\r\n                />\r\n              </Picker>\r\n            )}\r\n          </View>\r\n\r\n          <View className=\"flex w-full max-w-[550px] mb-4 mt-3\">\r\n            <TextInput\r\n              onChangeText={setText}\r\n              value={text}\r\n              placeholder=\"Any words to detect?\"\r\n              multiline\r\n              className=\"p-3 mx-5 border rounded text-md text-center dark:border-violet-800 dark:text-white\"\r\n              onKeyPress={(e: any) => {\r\n                if (e.nativeEvent.ctrlKey && e.nativeEvent.key == \"Enter\") {\r\n                  e.preventDefault();\r\n                  predict();\r\n                } else if (e.nativeEvent.ctrlKey && e.nativeEvent.key == \"Backspace\") {\r\n                  e.preventDefault();\r\n                  setText(\"\");\r\n                  setPrediction(null);\r\n                }\r\n              }}\r\n            />\r\n            <View className=\"flex-row justify-center mt-4\">\r\n              <Pressable\r\n                className=\"bg-black p-2.5 pt-3 rounded mx-2 dark:bg-violet-800\"\r\n                onPress={predict}\r\n              >\r\n                <Text className=\"text-white font-bold\">Predict</Text>\r\n              </Pressable>\r\n              <Pressable\r\n                className=\"bg-transparent border-2 border-black p-2.5 rounded mx-2 dark:border-violet-800\"\r\n                onPress={() => {\r\n                  setText(\"\");\r\n                  setPrediction(null);\r\n                }}\r\n              >\r\n                <Text className=\"font-bold dark:text-violet-800\">Reset</Text>\r\n              </Pressable>\r\n            </View>\r\n            <Predictions prediction={prediction} />\r\n          </View>\r\n        </View>\r\n        <View>\r\n          <Text className=\"text-base text-center dark:text-white\">\r\n            <Text className=\"font-bold\">Copyright Â© {new Date().getFullYear()} Wahyu Setianto</Text>\r\n            , Built with React Native and {\"\\u2764\"}\r\n          </Text>\r\n        </View>\r\n        <StatusBar style=\"auto\" />\r\n      </View>\r\n      <Loading progress={loading} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { registerRootComponent } from \"expo\";\r\nimport App from \"./src/App\";\r\nimport \"./src/styles\";\r\n\r\nregisterRootComponent(App);\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/skripsi-app/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [787], () => (__webpack_require__(9440)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["emoji","label","percentage","selected","className","toFixed","prediction","probabilities","predicted","imageUri","require","progress","colorScheme","useColorScheme","source","ActivityIndicator","size","color","modelHandler","loadSession","modelName","window","session","ort","process","console","log","e","alert","predict","text","result","input","run","words","then","res","data","Array","from","map","num","catch","Preprocessing","init","pyodide","runPythonAsync","preprocessing","runPython","useState","loading","setLoading","setText","setPrediction","setColorScheme","model","selectedModel","setSelectedModel","useRef","cleanedText","current","pred","Alert","useEffect","Platform","document","getElementsByTagName","prepare","loadPyodide","loadPackage","micropip","pyimport","install","Pressable","onPress","MaterialCommunityIcons","name","Picker","style","marginTop","padding","paddingTop","backgroundColor","borderRadius","fontSize","lineHeight","selectedValue","onValueChange","itemValue","value","onChangeText","placeholder","multiline","onKeyPress","nativeEvent","ctrlKey","key","preventDefault","View","Date","getFullYear","registerRootComponent","App","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","length","fulfilled","j","Object","keys","every","splice","r","n","getter","__esModule","d","a","leafPrototypes","getProto","getPrototypeOf","obj","t","mode","this","ns","create","def","indexOf","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","get","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","bind","push","__webpack_exports__"],"sourceRoot":""}