{"version":3,"sources":["assets/loading.png","webpack:///./src/styles/main.css?5f65","src/styles/main.css","src/components/card.tsx","src/components/predictions.tsx","src/components/description.tsx","src/components/loading.tsx","src/modelHandler/index.web.ts","src/modelHandler/preprocessing/index.web.ts","src/App.tsx","index.ts"],"names":["module","exports","api","content","__esModule","default","i","options","locals","___CSS_LOADER_API_IMPORT___","push","Card","emoji","label","percentage","selected","className","toFixed","Predictions","prediction","probabilities","predicted","Description","Platform","OS","imageUri","require","Loading","progress","colorScheme","useColorScheme","source","ActivityIndicator","size","color","modelHandler","loadSession","window","session","ort","create","process","console","log","e","alert","predict","text","result","input","run","words","then","res","Number","data","Array","from","map","num","catch","Preprocessing","init","pyodide","runPythonAsync","preprocessing","runPython","App","useState","loading","setLoading","setText","setPrediction","setColorScheme","model","useRef","cleanedText","current","pred","Alert","useEffect","document","getElementsByTagName","loadPyodide","loadPackage","micropip","pyimport","install","prepare","Pressable","onPress","MaterialCommunityIcons","name","onChangeText","value","placeholder","multiline","onKeyPress","nativeEvent","ctrlKey","key","preventDefault","View","Date","getFullYear","StatusBar","style","registerRootComponent"],"mappings":"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","file":"static/js/app.9ee83325.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.aefac1ac.png\";","var api = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n            var content = require(\"!!../../node_modules/css-loader/dist/cjs.js!../../node_modules/postcss-loader/dist/cjs.js!./main.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nmodule.exports = content.locals || {};","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \"/*\\n! tailwindcss v3.1.8 | MIT License | https://tailwindcss.com\\n*//*\\n1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)\\n2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)\\n*/\\n\\n*,\\n::before,\\n::after {\\n  box-sizing: border-box; /* 1 */\\n  border-width: 0; /* 2 */\\n  border-style: solid; /* 2 */\\n  border-color: #e5e7eb; /* 2 */\\n}\\n\\n::before,\\n::after {\\n  --tw-content: '';\\n}\\n\\n/*\\n1. Use a consistent sensible line-height in all browsers.\\n2. Prevent adjustments of font size after orientation changes in iOS.\\n3. Use a more readable tab size.\\n4. Use the user's configured `sans` font-family by default.\\n*/\\n\\nhtml {\\n  line-height: 1.5; /* 1 */\\n  -webkit-text-size-adjust: 100%; /* 2 */\\n  -moz-tab-size: 4; /* 3 */\\n  -o-tab-size: 4;\\n     tab-size: 4; /* 3 */\\n  font-family: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, \\\"Segoe UI\\\", Roboto, \\\"Helvetica Neue\\\", Arial, \\\"Noto Sans\\\", sans-serif, \\\"Apple Color Emoji\\\", \\\"Segoe UI Emoji\\\", \\\"Segoe UI Symbol\\\", \\\"Noto Color Emoji\\\"; /* 4 */\\n}\\n\\n/*\\n1. Remove the margin in all browsers.\\n2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.\\n*/\\n\\nbody {\\n  margin: 0; /* 1 */\\n  line-height: inherit; /* 2 */\\n}\\n\\n/*\\n1. Add the correct height in Firefox.\\n2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)\\n3. Ensure horizontal rules are visible by default.\\n*/\\n\\nhr {\\n  height: 0; /* 1 */\\n  color: inherit; /* 2 */\\n  border-top-width: 1px; /* 3 */\\n}\\n\\n/*\\nAdd the correct text decoration in Chrome, Edge, and Safari.\\n*/\\n\\nabbr:where([title]) {\\n  -webkit-text-decoration: underline dotted;\\n          text-decoration: underline dotted;\\n}\\n\\n/*\\nRemove the default font size and weight for headings.\\n*/\\n\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6 {\\n  font-size: inherit;\\n  font-weight: inherit;\\n}\\n\\n/*\\nReset links to optimize for opt-in styling instead of opt-out.\\n*/\\n\\na {\\n  color: inherit;\\n  text-decoration: inherit;\\n}\\n\\n/*\\nAdd the correct font weight in Edge and Safari.\\n*/\\n\\nb,\\nstrong {\\n  font-weight: bolder;\\n}\\n\\n/*\\n1. Use the user's configured `mono` font family by default.\\n2. Correct the odd `em` font sizing in all browsers.\\n*/\\n\\ncode,\\nkbd,\\nsamp,\\npre {\\n  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \\\"Liberation Mono\\\", \\\"Courier New\\\", monospace; /* 1 */\\n  font-size: 1em; /* 2 */\\n}\\n\\n/*\\nAdd the correct font size in all browsers.\\n*/\\n\\nsmall {\\n  font-size: 80%;\\n}\\n\\n/*\\nPrevent `sub` and `sup` elements from affecting the line height in all browsers.\\n*/\\n\\nsub,\\nsup {\\n  font-size: 75%;\\n  line-height: 0;\\n  position: relative;\\n  vertical-align: baseline;\\n}\\n\\nsub {\\n  bottom: -0.25em;\\n}\\n\\nsup {\\n  top: -0.5em;\\n}\\n\\n/*\\n1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)\\n2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)\\n3. Remove gaps between table borders by default.\\n*/\\n\\ntable {\\n  text-indent: 0; /* 1 */\\n  border-color: inherit; /* 2 */\\n  border-collapse: collapse; /* 3 */\\n}\\n\\n/*\\n1. Change the font styles in all browsers.\\n2. Remove the margin in Firefox and Safari.\\n3. Remove default padding in all browsers.\\n*/\\n\\nbutton,\\ninput,\\noptgroup,\\nselect,\\ntextarea {\\n  font-family: inherit; /* 1 */\\n  font-size: 100%; /* 1 */\\n  font-weight: inherit; /* 1 */\\n  line-height: inherit; /* 1 */\\n  color: inherit; /* 1 */\\n  margin: 0; /* 2 */\\n  padding: 0; /* 3 */\\n}\\n\\n/*\\nRemove the inheritance of text transform in Edge and Firefox.\\n*/\\n\\nbutton,\\nselect {\\n  text-transform: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Remove default button styles.\\n*/\\n\\nbutton,\\n[type='button'],\\n[type='reset'],\\n[type='submit'] {\\n  -webkit-appearance: button; /* 1 */\\n  background-color: transparent; /* 2 */\\n  background-image: none; /* 2 */\\n}\\n\\n/*\\nUse the modern Firefox focus style for all focusable elements.\\n*/\\n\\n:-moz-focusring {\\n  outline: auto;\\n}\\n\\n/*\\nRemove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)\\n*/\\n\\n:-moz-ui-invalid {\\n  box-shadow: none;\\n}\\n\\n/*\\nAdd the correct vertical alignment in Chrome and Firefox.\\n*/\\n\\nprogress {\\n  vertical-align: baseline;\\n}\\n\\n/*\\nCorrect the cursor style of increment and decrement buttons in Safari.\\n*/\\n\\n::-webkit-inner-spin-button,\\n::-webkit-outer-spin-button {\\n  height: auto;\\n}\\n\\n/*\\n1. Correct the odd appearance in Chrome and Safari.\\n2. Correct the outline style in Safari.\\n*/\\n\\n[type='search'] {\\n  -webkit-appearance: textfield; /* 1 */\\n  outline-offset: -2px; /* 2 */\\n}\\n\\n/*\\nRemove the inner padding in Chrome and Safari on macOS.\\n*/\\n\\n::-webkit-search-decoration {\\n  -webkit-appearance: none;\\n}\\n\\n/*\\n1. Correct the inability to style clickable types in iOS and Safari.\\n2. Change font properties to `inherit` in Safari.\\n*/\\n\\n::-webkit-file-upload-button {\\n  -webkit-appearance: button; /* 1 */\\n  font: inherit; /* 2 */\\n}\\n\\n/*\\nAdd the correct display in Chrome and Safari.\\n*/\\n\\nsummary {\\n  display: list-item;\\n}\\n\\n/*\\nRemoves the default spacing and border for appropriate elements.\\n*/\\n\\nblockquote,\\ndl,\\ndd,\\nh1,\\nh2,\\nh3,\\nh4,\\nh5,\\nh6,\\nhr,\\nfigure,\\np,\\npre {\\n  margin: 0;\\n}\\n\\nfieldset {\\n  margin: 0;\\n  padding: 0;\\n}\\n\\nlegend {\\n  padding: 0;\\n}\\n\\nol,\\nul,\\nmenu {\\n  list-style: none;\\n  margin: 0;\\n  padding: 0;\\n}\\n\\n/*\\nPrevent resizing textareas horizontally by default.\\n*/\\n\\ntextarea {\\n  resize: vertical;\\n}\\n\\n/*\\n1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)\\n2. Set the default placeholder color to the user's configured gray 400 color.\\n*/\\n\\ninput::-moz-placeholder, textarea::-moz-placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\ninput::placeholder,\\ntextarea::placeholder {\\n  opacity: 1; /* 1 */\\n  color: #9ca3af; /* 2 */\\n}\\n\\n/*\\nSet the default cursor for buttons.\\n*/\\n\\nbutton,\\n[role=\\\"button\\\"] {\\n  cursor: pointer;\\n}\\n\\n/*\\nMake sure disabled buttons don't get the pointer cursor.\\n*/\\n:disabled {\\n  cursor: default;\\n}\\n\\n/*\\n1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)\\n2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)\\n   This can trigger a poorly considered lint error in some tools but is included by design.\\n*/\\n\\nimg,\\nsvg,\\nvideo,\\ncanvas,\\naudio,\\niframe,\\nembed,\\nobject {\\n  display: block; /* 1 */\\n  vertical-align: middle; /* 2 */\\n}\\n\\n/*\\nConstrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)\\n*/\\n\\nimg,\\nvideo {\\n  max-width: 100%;\\n  height: auto;\\n}\\n\\n*, ::before, ::after {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n\\n::-webkit-backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n\\n::backdrop {\\n  --tw-border-spacing-x: 0;\\n  --tw-border-spacing-y: 0;\\n  --tw-translate-x: 0;\\n  --tw-translate-y: 0;\\n  --tw-rotate: 0;\\n  --tw-skew-x: 0;\\n  --tw-skew-y: 0;\\n  --tw-scale-x: 1;\\n  --tw-scale-y: 1;\\n  --tw-pan-x:  ;\\n  --tw-pan-y:  ;\\n  --tw-pinch-zoom:  ;\\n  --tw-scroll-snap-strictness: proximity;\\n  --tw-ordinal:  ;\\n  --tw-slashed-zero:  ;\\n  --tw-numeric-figure:  ;\\n  --tw-numeric-spacing:  ;\\n  --tw-numeric-fraction:  ;\\n  --tw-ring-inset:  ;\\n  --tw-ring-offset-width: 0px;\\n  --tw-ring-offset-color: #fff;\\n  --tw-ring-color: rgb(59 130 246 / 0.5);\\n  --tw-ring-offset-shadow: 0 0 #0000;\\n  --tw-ring-shadow: 0 0 #0000;\\n  --tw-shadow: 0 0 #0000;\\n  --tw-shadow-colored: 0 0 #0000;\\n  --tw-blur:  ;\\n  --tw-brightness:  ;\\n  --tw-contrast:  ;\\n  --tw-grayscale:  ;\\n  --tw-hue-rotate:  ;\\n  --tw-invert:  ;\\n  --tw-saturate:  ;\\n  --tw-sepia:  ;\\n  --tw-drop-shadow:  ;\\n  --tw-backdrop-blur:  ;\\n  --tw-backdrop-brightness:  ;\\n  --tw-backdrop-contrast:  ;\\n  --tw-backdrop-grayscale:  ;\\n  --tw-backdrop-hue-rotate:  ;\\n  --tw-backdrop-invert:  ;\\n  --tw-backdrop-opacity:  ;\\n  --tw-backdrop-saturate:  ;\\n  --tw-backdrop-sepia:  ;\\n}\\n.absolute {\\n  position: absolute;\\n}\\n.left-0 {\\n  left: 0px;\\n}\\n.top-0 {\\n  top: 0px;\\n}\\n.m-2 {\\n  margin: 0.5rem;\\n}\\n.m-8 {\\n  margin: 2rem;\\n}\\n.mx-4 {\\n  margin-left: 1rem;\\n  margin-right: 1rem;\\n}\\n.my-4 {\\n  margin-top: 1rem;\\n  margin-bottom: 1rem;\\n}\\n.mx-5 {\\n  margin-left: 1.25rem;\\n  margin-right: 1.25rem;\\n}\\n.mx-2 {\\n  margin-left: 0.5rem;\\n  margin-right: 0.5rem;\\n}\\n.mb-4 {\\n  margin-bottom: 1rem;\\n}\\n.mt-4 {\\n  margin-top: 1rem;\\n}\\n.mt-9 {\\n  margin-top: 2.25rem;\\n}\\n.mt-2 {\\n  margin-top: 0.5rem;\\n}\\n.flex {\\n  display: flex;\\n}\\n.h-full {\\n  height: 100%;\\n}\\n.h-80 {\\n  height: 20rem;\\n}\\n.w-full {\\n  width: 100%;\\n}\\n.w-80 {\\n  width: 20rem;\\n}\\n.max-w-\\\\[550px\\\\] {\\n  max-width: 550px;\\n}\\n.max-w-sm {\\n  max-width: 24rem;\\n}\\n.flex-1 {\\n  flex: 1 1 0%;\\n}\\n.flex-row {\\n  flex-direction: row;\\n}\\n.flex-wrap {\\n  flex-wrap: wrap;\\n}\\n.items-center {\\n  align-items: center;\\n}\\n.justify-center {\\n  justify-content: center;\\n}\\n.justify-between {\\n  justify-content: space-between;\\n}\\n.rounded-lg {\\n  border-radius: 0.5rem;\\n}\\n.rounded {\\n  border-radius: 0.25rem;\\n}\\n.rounded-xl {\\n  border-radius: 0.75rem;\\n}\\n.border {\\n  border-width: 1px;\\n}\\n.border-2 {\\n  border-width: 2px;\\n}\\n.border-black {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(0 0 0 / var(--tw-border-opacity));\\n}\\n.bg-white {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(255 255 255 / var(--tw-bg-opacity));\\n}\\n.bg-black {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(0 0 0 / var(--tw-bg-opacity));\\n}\\n.bg-transparent {\\n  background-color: transparent;\\n}\\n.bg-lime-400 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(163 230 53 / var(--tw-bg-opacity));\\n}\\n.bg-yellow-200 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(254 240 138 / var(--tw-bg-opacity));\\n}\\n.p-3 {\\n  padding: 0.75rem;\\n}\\n.p-2\\\\.5 {\\n  padding: 0.625rem;\\n}\\n.p-2 {\\n  padding: 0.5rem;\\n}\\n.px-2\\\\.5 {\\n  padding-left: 0.625rem;\\n  padding-right: 0.625rem;\\n}\\n.px-2 {\\n  padding-left: 0.5rem;\\n  padding-right: 0.5rem;\\n}\\n.px-4 {\\n  padding-left: 1rem;\\n  padding-right: 1rem;\\n}\\n.py-2 {\\n  padding-top: 0.5rem;\\n  padding-bottom: 0.5rem;\\n}\\n.pt-1\\\\.5 {\\n  padding-top: 0.375rem;\\n}\\n.pb-2 {\\n  padding-bottom: 0.5rem;\\n}\\n.pt-1 {\\n  padding-top: 0.25rem;\\n}\\n.pt-3 {\\n  padding-top: 0.75rem;\\n}\\n.text-center {\\n  text-align: center;\\n}\\n.text-3xl {\\n  font-size: 1.875rem;\\n  line-height: 2.25rem;\\n}\\n.text-base {\\n  font-size: 1rem;\\n  line-height: 1.5rem;\\n}\\n.text-sm {\\n  font-size: 0.875rem;\\n  line-height: 1.25rem;\\n}\\n.text-lg {\\n  font-size: 1.125rem;\\n  line-height: 1.75rem;\\n}\\n.font-semibold {\\n  font-weight: 600;\\n}\\n.font-bold {\\n  font-weight: 700;\\n}\\n.italic {\\n  font-style: italic;\\n}\\n.text-white {\\n  --tw-text-opacity: 1;\\n  color: rgb(255 255 255 / var(--tw-text-opacity));\\n}\\n.dark .dark\\\\:border-violet-800 {\\n  --tw-border-opacity: 1;\\n  border-color: rgb(91 33 182 / var(--tw-border-opacity));\\n}\\n.dark .dark\\\\:bg-neutral-900 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(23 23 23 / var(--tw-bg-opacity));\\n}\\n.dark .dark\\\\:bg-violet-900 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(76 29 149 / var(--tw-bg-opacity));\\n}\\n.dark .dark\\\\:bg-violet-800 {\\n  --tw-bg-opacity: 1;\\n  background-color: rgb(91 33 182 / var(--tw-bg-opacity));\\n}\\n.dark .dark\\\\:text-white {\\n  --tw-text-opacity: 1;\\n  color: rgb(255 255 255 / var(--tw-text-opacity));\\n}\\n.dark .dark\\\\:text-violet-800 {\\n  --tw-text-opacity: 1;\\n  color: rgb(91 33 182 / var(--tw-text-opacity));\\n}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { FC } from \"react\";\nimport { Text, View } from \"react-native\";\n\ninterface CardInterface {\n  emoji: string;\n  label: string;\n  percentage: number;\n  selected: boolean;\n}\n\nconst Card: FC<CardInterface> = ({ emoji, label, percentage, selected }) => {\n  return (\n    <View\n      className={`flex items-center m-2 px-4 py-2 rounded-lg ${\n        selected ? \"bg-lime-400\" : \"bg-yellow-200\"\n      }`}\n    >\n      <Text className=\"text-3xl\">{emoji}</Text>\n      <Text className=\"text-sm font-semibold dark\">{label}</Text>\n      <Text className=\"text-sm\">{percentage % 1 === 0 ? percentage : percentage.toFixed(2)}%</Text>\n    </View>\n  );\n};\n\nexport default Card;\n","import { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { PredInterface } from \"../modelHandler\";\nimport Card from \"./card\";\n\ninterface PredictionsInterface {\n  prediction: PredInterface | null;\n}\n\nconst Predictions: FC<PredictionsInterface> = ({ prediction }) => {\n  return (\n    <>\n      {prediction && (\n        <View className=\"flex justify-center items-center\">\n          <View className=\"flex-row justify-center flex-wrap mt-2 max-w-sm\">\n            <Card\n              emoji=\"😲\"\n              label=\"Surprise\"\n              percentage={prediction.probabilities[1]}\n              selected={prediction.predicted == 1}\n            />\n            <Card\n              emoji=\"😊\"\n              label=\"Happiness\"\n              percentage={prediction.probabilities[2]}\n              selected={prediction.predicted == 2}\n            />\n            <Card\n              emoji=\"😠\"\n              label=\"Anger\"\n              percentage={prediction.probabilities[3]}\n              selected={prediction.predicted == 3}\n            />\n            <Card\n              emoji=\"😨\"\n              label=\"Fear\"\n              percentage={prediction.probabilities[4]}\n              selected={prediction.predicted == 4}\n            />\n            <Card\n              emoji=\"🤢\"\n              label=\"Disgust\"\n              percentage={prediction.probabilities[5]}\n              selected={prediction.predicted == 5}\n            />\n            <Card\n              emoji=\"😢\"\n              label=\"Sadness\"\n              percentage={prediction.probabilities[6]}\n              selected={prediction.predicted == 6}\n            />\n          </View>\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default Predictions;\n","import { FC } from \"react\";\nimport { Platform, Text, View } from \"react-native\";\n\nconst Description: FC = () => {\n  return (\n    <View className=\"flex items-center justify-center\">\n      <Text className=\"text-3xl font-semibold text-center dark:text-white\">\n        Emotion Detector [ID]\n      </Text>\n      <Text className=\"text-sm text-center mx-2 dark:text-white\">\n        Text emotion detector using <Text className=\"font-bold\">SVM</Text> live in{\" \"}\n        {Platform.OS === \"web\" ? \"browser\" : \"mobile\"} powered by\n        <Text className=\"text-sm font-bold italic\">\n          {Platform.OS === \"web\" ? \" onnxruntime-web\" : \" onnxruntime-mobile\"}\n        </Text>\n      </Text>\n    </View>\n  );\n};\n\nexport default Description;\n","import { FC } from \"react\";\nimport { ActivityIndicator, Image, Platform, Text, View } from \"react-native\";\nimport { useColorScheme } from \"nativewind\";\n\nconst imageUri = require(\"../../assets/loading.png\");\n\nconst Loading: FC<{ progress: string | null }> = ({ progress }) => {\n  const { colorScheme } = useColorScheme();\n\n  return (\n    <>\n      {progress && (\n        <View className=\"flex-1 absolute left-0 top-0 w-full h-full items-center justify-center bg-white dark:bg-neutral-900\">\n          <Image source={imageUri} className=\"w-80 h-80 rounded-xl\" />\n          <View className=\"flex-row items-center justify-center\">\n            <ActivityIndicator size=\"large\" color={colorScheme === \"dark\" ? \"white\" : \"black\"} />\n            <Text className=\"m-8 text-lg font-semibold dark:text-white\">{progress}</Text>\n          </View>\n        </View>\n      )}\n    </>\n  );\n};\n\nexport default Loading;\n","import * as ort from \"onnxruntime-web\";\n\nexport interface PredInterface {\n  predicted: number;\n  probabilities: number[];\n}\n\nexport class modelHandler {\n  loadSession = async (): Promise<void> => {\n    try {\n      // on web model is placed on static/model folder. see webpack.config.js\n      (window as any).session = await ort.InferenceSession.create(\n        `${process.env.PUBLIC_URL}/static/model/model.with_runtime_opt.ort`\n      );\n      console.log(\"Session loaded!\");\n    } catch (e) {\n      alert(\"Can't load model!\");\n      throw e;\n    }\n  };\n\n  predict = async (text: string): Promise<PredInterface | undefined> => {\n    const session: ort.InferenceSession = (window as any).session;\n    if (!session) alert(\"Model is not loaded!\");\n\n    let result: PredInterface | undefined;\n    const input = new ort.Tensor(\"string\", [text], [1, 1]);\n    await session\n      .run({ words: input })\n      .then((res) => {\n        result = {\n          predicted: Number(res.label.data[0] as bigint),\n          probabilities: Array.from(res.probabilities.data as Float32Array).map((num) => num * 100),\n        };\n      })\n      .catch((e) => {\n        alert(\"Failed to predict!.\");\n        throw e;\n      });\n\n    return result;\n  };\n}\n","type prepFun = (text: string) => string;\n\nexport class Preprocessing {\n  init = async () => {\n    await ((window as any).pyodide as Pyodide).runPythonAsync(`\n      import re\n      import string\n      import unicodedata\n      from Sastrawi.Stemmer.StemmerFactory import StemmerFactory\n      from indoNLP.preprocessing import (emoji_to_words, remove_html,\n          remove_url, replace_slang, replace_word_elongation\n      )\n      \n      factory = StemmerFactory()\n      STEMMER = factory.create_stemmer()\n    `);\n  };\n\n  preprocessing: prepFun = ((window as any).pyodide as Pyodide).runPython(`\n    def preprocessing(text):\n        text = text.lower()\n        text = re.sub(r\"\\\\s+\", \" \", text, flags=re.UNICODE)  # remove whitespace\n        text = emoji_to_words(text)  # remove emoji\n        text = unicodedata.normalize(\"NFD\", text).encode(\"ascii\", \"ignore\").decode(\"ascii\")\n        text = remove_html(text)  # remove html tags\n        text = remove_url(text)  # remove url\n        text = replace_word_elongation(text)\n        text = replace_slang(text)  # replace slang words\n        # text = remove_stopwords(text)\n        text = text.translate(str.maketrans(\"\", \"\", string.digits))  # remove numbers\n        text = text.translate(\n            str.maketrans(string.punctuation, \" \" * len(string.punctuation))\n        )  # remove punctuation\n        text = \" \".join(text.split())\n        text = STEMMER.stem(text)\n        return \" \".join(text.split())\n    preprocessing\n    `);\n\n  run = (text: string): string => this.preprocessing(text);\n}\n","import { FC, useEffect, useState, useRef } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { Alert, Platform, Pressable, Text, TextInput, View } from \"react-native\";\nimport { MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { useColorScheme } from \"nativewind\";\nimport Predictions from \"./components/predictions\";\nimport Description from \"./components/description\";\nimport Loading from \"./components/loading\";\nimport { modelHandler, PredInterface } from \"./modelHandler\";\nimport { Preprocessing } from \"./modelHandler/preprocessing\";\n\nconst App: FC = () => {\n  const [loading, setLoading] = useState<string | null>(\"Loading Model...\");\n  const [text, setText] = useState<string>(\"\");\n  const [prediction, setPrediction] = useState<PredInterface | null>(null);\n  const { colorScheme, setColorScheme } = useColorScheme();\n  const model = new modelHandler();\n  const preprocessing = useRef<Preprocessing | null>(null);\n\n  const predict = async () => {\n    if (text !== \"\") {\n      const cleanedText = preprocessing.current?.run(text) as string;\n      const pred = await model.predict(cleanedText);\n      if (pred) setPrediction(pred);\n    } else Alert.alert(\"Null text submitted!\", \"Please type a text to detect.\");\n  };\n\n  // handle toggle theme on web\n  useEffect(() => {\n    if (Platform.OS === \"web\")\n      document.getElementsByTagName(\"html\")[0].className = colorScheme === \"dark\" ? \"dark\" : \"\";\n  }, [colorScheme]);\n\n  useEffect(() => {\n    const prepare = async (): Promise<void> => {\n      await model.loadSession();\n\n      if (Platform.OS === \"web\") {\n        setLoading(\"Loading Pyodide...\");\n        const pyodide = await loadPyodide();\n        await pyodide.loadPackage(\"micropip\");\n        const micropip = pyodide.pyimport(\"micropip\");\n\n        setLoading(\"Installing pydeps on pyodide...\");\n        await micropip.install([\"indoNLP\", \"PySastrawi\"]);\n\n        (window as any).pyodide = pyodide;\n      }\n\n      preprocessing.current = new Preprocessing();\n      await preprocessing.current.init();\n      setLoading(null);\n    };\n\n    prepare();\n  }, []);\n\n  return (\n    <View className=\"flex-1 bg-white dark:bg-neutral-900\">\n      <View\n        className={`flex-1 items-center justify-between mx-4 mb-4 ${\n          Platform.OS === \"web\" ? \"mt-4\" : \"mt-9\"\n        }`}\n      >\n        <View className=\"flex-row items-center w-full justify-between\">\n          <View className=\"px-2.5 pt-1.5 pb-2 bg-black dark:bg-violet-900 rounded-lg\">\n            <Text className=\"text-3xl text-white font-semibold\">Showcase</Text>\n          </View>\n          <Pressable\n            onPress={() => {\n              setColorScheme(colorScheme === \"dark\" ? \"light\" : \"dark\");\n            }}\n          >\n            {colorScheme === \"dark\" ? (\n              <MaterialCommunityIcons name=\"weather-sunny\" size={35} color=\"white\" />\n            ) : (\n              <MaterialCommunityIcons name=\"weather-night\" size={35} color=\"black\" />\n            )}\n          </Pressable>\n        </View>\n        <View className=\"flex items-center w-full\">\n          <Description />\n          <View className=\"flex w-full max-w-[550px] my-4\">\n            <TextInput\n              onChangeText={setText}\n              value={text}\n              placeholder=\"Any words to detect?\"\n              multiline\n              className=\"p-3 mx-5 border rounded text-md text-center dark:border-violet-800 dark:text-white\"\n              onKeyPress={(e: any) => {\n                if (e.nativeEvent.ctrlKey && e.nativeEvent.key == \"Enter\") {\n                  e.preventDefault();\n                  predict();\n                } else if (e.nativeEvent.ctrlKey && e.nativeEvent.key == \"Backspace\") {\n                  e.preventDefault();\n                  setText(\"\");\n                  setPrediction(null);\n                }\n              }}\n            />\n            <View className=\"flex-row justify-center mt-4\">\n              <Pressable\n                className=\"bg-black p-2.5 pt-3 rounded mx-2 dark:bg-violet-800\"\n                onPress={predict}\n              >\n                <Text className=\"text-white font-bold\">Predict</Text>\n              </Pressable>\n              <Pressable\n                className=\"bg-transparent border-2 border-black p-2.5 rounded mx-2 dark:border-violet-800\"\n                onPress={() => {\n                  setText(\"\");\n                  setPrediction(null);\n                }}\n              >\n                <Text className=\"font-bold dark:text-violet-800\">Reset</Text>\n              </Pressable>\n            </View>\n            <Predictions prediction={prediction} />\n          </View>\n        </View>\n        <View>\n          <Text className=\"text-base text-center dark:text-white\">\n            <Text className=\"font-bold\">Copyright © {new Date().getFullYear()} Wahyu Setianto</Text>\n            , Built with React Native and {\"\\u2764\"}\n          </Text>\n        </View>\n        <StatusBar style=\"auto\" />\n      </View>\n      <Loading progress={loading} />\n    </View>\n  );\n};\n\nexport default App;\n","import { registerRootComponent } from \"expo\";\nimport App from \"./src/App\";\nimport \"./src/styles\";\n\nregisterRootComponent(App);\n"],"sourceRoot":""}